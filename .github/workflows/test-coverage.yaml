name: test-coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-coverage:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'oldrel-1'}

    env:
      RSPM: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          extra-repositories: "https://inla.r-inla-download.org/R/testing"

      - name: Install system dependencies on macOS (X11, GDAL)
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz
          brew install pkg-config
          brew install proj@9
          brew install gdal

      - name: Install system dependencies on Linux (GL)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y && sudo apt-get install -y libglu1-mesa-dev

      - name: Install sessioninfo
        run: install.packages("sessioninfo")
        shell: Rscript {0}

      - name: Install covr
        if: runner.os == 'Linux'
        run: install.packages("covr")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"all"'
          extra-packages: |
            rcmdcheck
            testthat
            covr
            sessioninfo

      - name: Session Info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Run R CMD check
        run: |
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Run test coverage and report to Codecov
        if: runner.os == 'Linux'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          R CMD INSTALL .
          covr::codecov()
        shell: Rscript {0}

      - name: Show testthat output (if any)
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash


      - name: Upload check results
        uses: actions/upload-artifact@v4
        with:
          name: R-CMD-check-results-${{ matrix.config.os }}
          path: check
          if-no-files-found: ignore

